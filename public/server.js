(()=>{const e={},t=e=>e[0].id,n=e=>e[2]||t(e),a=(e,t)=>e[2]=t,s=e=>e[1],r=(e,t)=>e[1]=t,o=e=>e[1]=null,c=e=>"Game exists: "+n(e),i=e=>"No game: "+n(e),l=(e,t)=>[e,t],d=(e,t)=>JSON.stringify([e,t]),p=()=>(+new Date*Math.random()).toString(16),m=e=>(t,n)=>{try{e(t,n)}catch(e){n.send(d(null,"Error."))}},u=()=>{const t=[],n=e=>{for(let n=0;n<t.length;n++)if(t[n].id===e)return 1};for(const a in e){const r=s(e[a]);r&&(n(r.id)||t.push(r))}return t},_=()=>u().filter(e=>!e.isStarted()&&!e.isPractice()),y=()=>{((t,n,a)=>{for(const a in e){if(void 0===a)continue;const[s]=e[a];s.emit(t,n)}})(G_S_LIST_UPDATED,l(_()))},h=(t,n)=>(t=>e[t])(t)||(n.send(d(null,"No user: "+t)),0),f={[G_R_CREATE+"/:id/:userName/:isPractice"]:m(async(e,t)=>{const{id:n,userName:o,isPractice:i}=e.params,l=h(n,t);if(l)if(o)if(s(l))t.send(d(null,c(l)));else{a(l,o);const e=o+"'s Game",n=A(l,e);r(l,n),"true"===i&&await n.setPractice(),t.send(d({id:n.id,name:e})),y()}else t.send(d(null,"No given userName."))}),[G_R_JOIN+"/:id/:args"]:m(async(e,t)=>{const{id:n,args:s}=e.params,o=s.indexOf(","),i=s.slice(0,o),l=s.slice(o+1),p=h(n,t);if(!p)return;const m=(e=>u().reduce((t,n)=>n.id===e?n:t,null))(i);m?(r(p,m),a(p,l),await m.join(p)?(t.send(d({id:m.id,name:m.name,players:m.getPlayers()})),y()):t.send(d(null,"Cannot join."))):t.send(d(null,c(p)))}),[G_R_LEAVE+"/:id"]:m((e,t)=>{const{id:n}=e.params,a=h(n,t);if(!a)return;const r=s(a);r?(o(a),r.leave(a),t.send(d(r.id)),y()):t.send(d(null,c(a)))}),[G_R_START+"/:id/:mapIndex"]:m(async(e,t)=>{const{id:n,mapIndex:a}=e.params,r=h(n,t);if(!r)return;const o=s(r);o?o.canStart()?(t.send(d(1)),await o.setMapIndex(+a),await o.start(),y()):t.send(d(null,"Cannot start yet.")):t.send(d(null,i(r)))}),[G_R_CONFIRM_ACTION+"/:id/:action/:args"]:m((e,t)=>{const{id:n,action:a,args:r}=e.params,o=h(n,t);if(!o)return;const c=s(o);c?c.isStarted()?c.confirmAction(a,r,o)?t.send(d(1)):t.send(d(null,"Cannot confirm.")):t.send(d(null,"Game not started.")):t.send(d(null,i(o)))}),io:async t=>{const n=(e=>[e,"",""])(t);e[t.id]=n,t.on("disconnect",m(()=>{(t=>{const[n,a]=t;a&&a.leave(t),delete e[n]})(n)}));const a=p();t.emit(G_S_CONNECTED,l({games:_(),maps:await G(),id:t.id,key:a}))}};module.exports=f;const G=async()=>await storage.get("maps");let g=0;const S=async()=>{if(0===g){const e=await G();g=e.length}return g},A=(e,a)=>{let s,r,c,i,d=[e],m=0,u=0,_=0,h=null,f=1,g=0,A=25/G_SCALE,E=100,T=0;const C=["blue","red","green","yellow"],I=()=>{try{let e=+new Date;r=e-s,s=e;let t=h,{projectiles:n,planets:a,players:o,resources:c}=t,i=G_applyGravity(n,n.concat(a),o.filter(e=>!e.dead).concat(c),r);h.collisions=i;let d=i.length;if(d)for(let e=0;e<d;e++)v(i[e])&&(i.splice(e,1),e--,d--);for(let e=0;e<n.length;e++){const t=n[e];t.meta.type===G_action_move&&N(t.meta.player,t.px,t.py),t.meta.remove?(n.splice(e,1),e--):(s-m>=t.t||R(t.px,t.py))&&(i.push([t,null]),n.splice(e,1),e--)}for(let e=0;e<a.length;e++)a[e].meta.remove&&(a.splice(e,1),e--);if(0===n.length)return void x();g++,(g>=10||i.length)&&(g=0,((e,t,n)=>{j.emitAll(G_S_BROADCAST,l({i:e,timestamp:t,gameData:n}))})(f++,s,h))}catch(e){x()}},v=e=>{const[t,n]=e;let a=L(t.meta.player,h);switch(1){case!(!n.color||!n.name):a=L(n.id,h),a.dead=1,t.meta.remove=1;break;case(e=>e.meta&&e.meta.proj)(n):if(n.meta.player===t.meta.player)return 1;const e=t.meta.speed*t.meta.mass,s=n.meta.speed*n.meta.mass;e>=s&&(n.meta.remove=1),s>=e&&(t.meta.remove=1);break;case(e=>e.type===G_res_coin)(n):a.funds+=n.value,P(n.id,h);break;case(e=>e.type===G_res_spray)(n):a.actions[G_action_spread]+=2,P(n.id,h);break;case(e=>e.type===G_res_planetCracker)(n):a.actions[G_action_planetCracker]+=2,P(n.id,h);break;case(e=>!!e.color)(n):t.meta.remove=1;const r=t.meta.type;r===G_action_move?a.dead=1:r===G_action_planetCracker&&(n.meta.remove=1)}},R=(e,t)=>{const n=h.width+G_AU/2,a=h.height+G_AU/2;return e<-n||e>n||t>a||t<-a},w=()=>{m=s=+new Date,r=0,j.emitAll(G_S_START_SIMULATION,l(h)),i=setTimeout(x,h.maxRoundLength),c=setInterval(I,G_FRAME_MS)},x=()=>{if(u){j.emitAll(G_S_STOP_SIMULATION,l(h)),clearInterval(c),c=-1,clearTimeout(i),i=-1,h.projectiles=[],h.collisions=[];const e=M();e?(j.finished=1,j.finish(e)):h.players.forEach(e=>{e.ready=0,e.funds+=25})}},L=(e,n)=>{const a="string"==typeof e?e:t(e);return n.players.reduce((e,t)=>t.id===a?t:e,null)},P=(e,t)=>{const n=((e,t)=>t.resources.reduce((t,n,a)=>n.id===e?a:t,-1))(e,t);n>-1&&t.resources.splice(n,1)},N=(e,t,n)=>{const a=L(e,h);D(t,n)&&(a.x=t,a.y=n)},D=(e,t)=>{const{width:n,height:a}=h;return e>=-n&&e<=n&&t>=-a&&t<=a},k=()=>h.players.reduce((e,t)=>e&&(t.dead?1:t.ready),1),M=()=>{if(_)return 0;let e=[];for(let t=0;t<h.players.length;t++){const n=h.players[t];n.dead||e.push(n)}return 0===e.length?"draw":1===e.length?e[0].id:0},O=()=>{const e=j.getPlayers();j.emitAll(G_S_LOBBY_LIST_UPDATED,l(e))},j={id:t(e),name:a,getPlayers:()=>d.map(e=>({id:t(e),userName:n(e)})),join:async e=>u||_?0:d.length<4?(d.push(e),O(),1):0,leave(e){for(let t=0;t<d.length;t++){const n=d[t];if(n===e){if(d.splice(t,1),o(n),u){const e=L(n,h);return 0===d.length?j.stop():e.dead||(e.dead=1),M()?j.stop():k()&&setTimeout(()=>{try{w()}catch(e){}},500),1}return 0===t?j.stop():O(),1}}return 0},async start(){u=1;const e=await G();h=((e,a)=>{let s=(e=>{let t=e.length;e=[...e];const n=[];for(let a=0;a<t;a++){const t=Math.floor(Math.random()*e.length);n.push(e[t]),e.splice(t,1)}return n})(e);const{resourceLocations:r,planetLocations:o,playerLocations:c}=a,i={...a,players:[],planets:[],resources:[],projectiles:[],collisions:[],result:0,baseFundsPerRound:25};for(let e=0;e<s.length;e++){const a=s[e],{x:r,y:o,r:l}=c[e],d=G_getRandomLocInCircle(r,o,l);i.players.push({id:t(a),name:n(a),funds:E,actions:{[G_action_shoot]:99,[G_action_move]:99,[G_action_spread]:0,[G_action_planetCracker]:0},ready:0,dead:0,hp:1,color:C[e],r:A,...d,target:[d.x,d.y]})}for(let e=0;e<o.length;e++){const t=o[e],{x:n,y:a,mass:s,color:r,r:c,posR:l}=t,d=G_getRandomLocInCircle(n,a,l);i.planets.push(G_Body({color:r,type:"planet"},s,r,c,0,0,d.x,d.y))}for(let e=0;e<r.length;e++){const t=r[e],{x:n,y:a,posR:s}=t;i.resources.push({...t,id:p(),...G_getRandomLocInCircle(n,a,s)})}return i})(d,e[T]),j.emitAll(G_S_START,l({startTime:m,gameData:h}))},stop(){x(),j.emitAll(G_S_STOP,l("The game was stopped.")),d.forEach(e=>{o(e)}),y()},finish(e){h.result=e,j.emitAll(G_S_FINISHED,l(h)),d.forEach(e=>{o(e)}),y()},setPractice(){_=1,E=1e5},async setMapIndex(e){const t=await S();e>=0&&e<t&&(T=e)},confirmAction(e,t,n){const a=L(n,h);if(!a||a.dead)return 0;const[s,r,o]=t.split(","),c=(([e,t])=>{const n=Math.sqrt(e*e+t*t);return[e/n,t/n]})([s-a.x,r-a.y]),i=((e,t,n,a)=>{const s=(e,t)=>{const{round:n,cos:a,sin:s,PI:r}=Math,o=a(t*=r/180),c=s(t);return[n(1e4*(e[0]*o-e[1]*c))/1e4,n(1e4*(e[0]*c+e[1]*o))/1e4]},r=(n,s)=>G_Body({proj:1,type:e,id:G_S_randomId(),player:a.id,speed:t,color:a.color},c,m,i,n*t,s*t,u,_,l),o=[];let c=1,i=5/G_SCALE,l=h.maxRoundLength,d=n[0],p=n[1];const{color:m,x:u,y:_}=a;switch(e){case G_action_spread:for(let e=-5;e<=5;e+=5){let[t,a]=s(n,e);o.push(r(t,a))}break;case G_action_planetCracker:i=20/G_SCALE,c=10,o.push(r(d,p));break;case G_action_move:l=1e3,i=15/G_SCALE;default:o.push(r(d,p))}return o})(e,G_SPEEDS[o]&&G_SPEEDS[o][0]||G_SPEEDS.normal[0],c,a),l=((e,t,n)=>{const a=G_getActionCost(e)+G_getSpeedCost(t);return L(n,h).funds>a?a:0})(e,o,n);return 0==l?0:(h.projectiles=h.projectiles.concat(i),a.target=[s,r],a.funds-=l,a.cost=l,a.actions[e]-=a.actions[e]<99?1:0,a.action=e,a.ready=1,k()&&setTimeout(()=>{try{w()}catch(e){}},500),1)},canStart:()=>_?1:d.length>1&&d.length<4&&!u,isPractice:()=>_,isStarted:()=>u,emitAll(e,t){d.forEach(n=>{n[0].emit(e,t)})}};return j}})();