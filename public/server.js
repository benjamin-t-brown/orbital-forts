(()=>{const e={},t=e=>e[0].id,n=e=>e[2],a=(e,t)=>e[2]=t,s=e=>e[1],r=(e,t)=>e[1]=t,i=e=>e[1]=null,l=e=>"Game exists: "+n(e),o=e=>"No game: "+n(e),c=(e,t)=>[e,t],d=(e,t)=>JSON.stringify([e,t]),u=e=>async(t,n)=>{try{await e(t,n)}catch(e){n.send(d(null,"Error."))}},m=()=>{const t=[],n=e=>{for(let n=0;n<t.length;n++)if(t[n].id===e)return!0};for(const a in e){const r=s(e[a]);r&&(n(r.id)||t.push(r))}return t},p=()=>m().filter(e=>!e.isStarted()&&!e.isPractice()&&e.getPlayers().length<4),y=()=>{((t,n,a)=>{for(const a in e){if(void 0===a)continue;const[s]=e[a];s.emit(t,n)}})(G_S_LIST_UPDATED,c(p()))},_=(t,n,a)=>{const s=(t=>e[t])(t);return s?(e=>e[3])(s)!==n.headers.key?(a.send(d(null,"Unauthorized (invalid key): id="+t)),!1):s:(a.send(d(null,"No user: id="+t)),!1)},g={[G_R_CREATE+"/:id/:userName/:isPractice"]:u(async(e,t)=>{const{id:i,userName:o,isPractice:c}=e.params,u=_(i,e,t);if(!u)return;if(!o)return void t.send(d(null,"No given userName."));if(s(u))return void t.send(d(null,l(u)));if(m().length>=10)return void t.send(d(null,(e=>"Max games exceeded: "+n(e))(u)));a(u,o);const p=o+"'s Game",g=S(u,p);r(u,g),"true"===c&&await g.setPractice(),t.send(d({id:g.id,name:p,lobbyData:g.getLobbyData()})),y()}),[G_R_JOIN+"/:id/:args"]:u(async(e,t)=>{const{id:n,args:s}=e.params,i=s.indexOf(","),o=s.slice(0,i),c=s.slice(i+1),u=_(n,e,t);if(!u)return;const p=(e=>m().reduce((t,n)=>n.id===e?n:t,null))(o);p?(r(u,p),a(u,c),await p.join(u)?(t.send(d({id:p.id,name:p.name,lobbyData:p.getLobbyData()})),y()):t.send(d(null,"Cannot join."))):t.send(d(null,l(u)))}),[G_R_LEAVE+"/:id"]:u((e,t)=>{const{id:n}=e.params,a=_(n,e,t);if(!a)return;const r=s(a);r?(i(a),r.leave(a),t.send(d(r.id)),y()):t.send(d(null,l(a)))}),[G_R_START+"/:id/:mapIndex"]:u(async(e,t)=>{const{id:n,mapIndex:a}=e.params,r=_(n,e,t);if(!r)return;const i=s(r);i?i.canStart()?(t.send(d(!0)),await i.setMapIndex(+a),await i.start(),y()):t.send(d(null,"Cannot start yet.")):t.send(d(null,o(r)))}),[G_R_CONFIRM_ACTION+"/:id/:action/:args"]:u((e,t)=>{const{id:n,action:a,args:r}=e.params,i=_(n,e,t);if(!i)return;const l=s(i);l?l.isStarted()?l.confirmAction(a,r,i)?t.send(d(!0)):t.send(d(null,"Cannot confirm.")):t.send(d(null,"Game not started.")):t.send(d(null,o(i)))}),io:async t=>{const n=G_randomId(),a=((e,t)=>[e,"","",t])(t,n);e[t.id]=a,t.on("disconnect",u(()=>{(t=>{const[n,a]=t;a&&a.leave(t),delete e[n]})(a)}));const s=await f();t.emit(G_S_CONNECTED,c({games:p(),maps:s.map(e=>({name:e.name})),id:t.id,key:n}))}};module.exports=g;const f=async()=>await storage.get("maps");let h=0;const G=async()=>{if(0===h){const e=await f();h=e.length}return h},S=(e,a)=>{let s,r,l,o,d=[e],u=0,m=!1,p=!1,_=null,g=1,h=0,S=25/G_SCALE,A=175,T=0,D={version:"1.0",date:+new Date,name:a,players:[],states:[],initialGameData:null,map:null};const E=["blue","red","green","yellow"],I=()=>{try{let e=+new Date;r=e-s,s=e,G_simulate(_,{startTime:u,nowDt:r,now:s});let{projectiles:t,collisions:n}=_;if(0===t.length)return void N();h++,(h>=10||n.length)&&(h=0,((e,t,n)=>{v.emitAll(G_S_BROADCAST,c({i:e,timestamp:t,gameData:n}))})(g++,s,_))}catch(e){N()}},w=()=>{u=s=+new Date,r=0,v.emitAll(G_S_START_SIMULATION,c(_)),o=setTimeout(N,_.maxRoundLength),l=setInterval(I,G_FRAME_MS)},N=()=>{if(m){v.emitAll(G_S_STOP_SIMULATION,c(_)),clearInterval(l),l=-1,clearTimeout(o),o=-1,_.projectiles=[],_.collisions=[];const e=b();e?(v.finished=!0,v.finish(e)):_.players.forEach(e=>{e.ready=!1,e.funds+=25})}},P=(e,n)=>{const a="string"==typeof e?e:t(e);return n.players.reduce((e,t)=>t.id===a?t:e,null)},R=()=>_.players.reduce((e,t)=>e&&(!!t.dead||t.ready),!0),b=()=>{if(p)return!1;let e=[];for(let t=0;t<_.players.length;t++){const n=_.players[t];n.dead||e.push(n)}return 0===e.length?"draw":1===e.length&&e[0].id},x=()=>{v.emitAll(G_S_LOBBY_DATA,c(v.getLobbyData()))},v={id:t(e),name:a,getPlayers:()=>d.map(e=>({id:t(e),userName:n(e)})),getLobbyData:()=>({mapIndex:T,ownerId:t(e),players:v.getPlayers()}),join:async e=>!m&&!p&&d.length<4&&(d.push(e),x(),!0),leave(e){for(let t=0;t<d.length;t++){const n=d[t];if(n===e){if(d.splice(t,1),i(n),m){const e=P(n,_);return 0===d.length?v.stop():e.dead||(e.dead=!0),b()?v.stop():R()&&setTimeout(()=>{try{w()}catch(e){}},500),!0}return 0===t?v.stop():x(),!0}}return!1},async start(){m=!0;const e=await f();_=((e,a)=>{let s=(e=>{let t=e.length;e=[...e];const n=[];for(let a=0;a<t;a++){const t=Math.floor(Math.random()*e.length);n.push(e[t]),e.splice(t,1)}return n})(e);const{playerLocations:r}=a,i={...a,players:[],planets:[],resources:[],projectiles:[],collisions:[],result:!1,baseFundsPerRound:25};for(let e=0;e<s.length;e++){const a=s[e],{x:l,y:o,r:c}=r[e],d=G_getRandomLocInCircle(l,o,c);let u={};for(let e in G_actions)u[G_actions[e][0]]=e<=1?99:0;i.players.push({id:t(a),name:n(a),funds:A,actions:u,ready:!1,dead:!1,hp:1,color:E[e],r:S,...d,target:[d.x,d.y]})}return G_createEntities(i,a,{}),D.initialGameData=i,D.map=a,i})(d,e[T]),v.emitAll(G_S_START,c({startTime:u,gameData:_}))},stop(){N(),v.emitAll(G_S_STOP,c("The game was stopped.")),d.forEach(e=>{i(e)}),y()},finish(e){_.result=e,v.emitAll(G_S_FINISHED,c(_)),d.forEach(e=>{i(e)}),y()},setPractice(){p=!0,A=1e5},async setMapIndex(e){const t=await G();e>=0&&e<t&&(T=e)},confirmAction(e,t,n){const a=P(n,_);if(!a||a.dead)return!1;const[s,r,i]=t.split(","),l=G_getNormalizedVec([s-a.x,r-a.y]),o=G_createProjectiles({type:e,speed:G_SPEEDS[i]&&G_SPEEDS[i][0]||G_SPEEDS.normal[0],normalizedVec:l,player:a},_),c=((e,t,n)=>{const a=G_getActionCost(e)+G_getSpeedCost(t);return P(n,_).funds>a&&a})(e,i,n);return!1!==c&&(_.projectiles=_.projectiles.concat(o),a.target=[s,r],a.funds-=c,a.cost=c,a.actions[e]-=a.actions[e]<99?1:0,a.action=e,a.ready=!0,R()&&setTimeout(()=>{try{w()}catch(e){}},500),!0)},canStart:()=>!!p||d.length>1&&d.length<=4&&!m,isPractice:()=>p,isStarted:()=>m,getReplay:()=>D,emitAll(e,t){d.forEach(n=>{n[0].emit(e,t)})}};return v}})();