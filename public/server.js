(()=>{const e={},t=e=>e[0].id,s=e=>e[2]||t(e),a=(e,t)=>e[2]=t,r=e=>e[1],n=(e,t)=>e[1]=t,o=e=>e[1]=null,_=e=>"Game exists: "+s(e),G=e=>"No game: "+s(e),l=(e,t)=>[e,t],c=(e,t)=>JSON.stringify([e,t]),i=()=>(+new Date*Math.random()).toString(16),A=e=>(t,s)=>{try{e(t,s)}catch(e){s.send(c(null,"Error."))}},U=()=>{const t=[],s=e=>{for(let s=0;s<t.length;s++)if(t[s].id===e)return 1};for(const a in e){const n=r(e[a]);n&&(s(n.id)||t.push(n))}return t},p=()=>U().filter(e=>!e.isStarted()&&!e.isPractice()),d=()=>{((t,s,a)=>{for(const a in e){if(void 0===a)continue;const[r]=e[a];r.emit(t,s)}})(G_S_LIST_UPDATED,l(p()))},m=(t,s)=>(t=>e[t])(t)||(s.send(c(null,"No user: "+t)),0),u={[G_R_CREATE+"/:id/:userName/:isPractice"]:A((e,t)=>{const{id:s,userName:o,isPractice:G}=e.params,l=m(s,t);if(l)if(o)if(r(l))t.send(c(null,_(l)));else{a(l,o);const e=o+"'s Game",s=E(l,e);n(l,s),"true"===G&&s.setMapIndex(-1),t.send(c({id:s.id,name:e})),d()}else t.send(c(null,"No given userName."))}),[G_R_JOIN+"/:id/:args"]:A((e,t)=>{const{id:s,args:r}=e.params,o=r.indexOf(","),G=r.slice(0,o),l=r.slice(o+1),i=m(s,t);if(!i)return;const A=(e=>U().reduce((t,s)=>s.id===e?s:t,null))(G);A?(n(i,A),a(i,l),A.join(i)?(t.send(c({id:A.id,name:A.name,players:A.getPlayers()})),d()):t.send(c(null,"Cannot join."))):t.send(c(null,_(i)))}),[G_R_LEAVE+"/:id"]:A((e,t)=>{const{id:s}=e.params,a=m(s,t);if(!a)return;const n=r(a);n?(o(a),n.leave(a),t.send(c(n.id)),d()):t.send(c(null,_(a)))}),[G_R_START+"/:id/:mapIndex"]:A((e,t)=>{const{id:s,mapIndex:a}=e.params,n=m(s,t);if(!n)return;const o=r(n);o?o.canStart()?(t.send(c(1)),o.setMapIndex(+a),o.start(),d()):t.send(c(null,"Cannot start yet.")):t.send(c(null,G(n)))}),[G_R_CONFIRM_ACTION+"/:id/:action/:args"]:A((e,t)=>{const{id:s,action:a,args:n}=e.params,o=m(s,t);if(!o)return;const _=r(o);_?_.isStarted()?_.confirmAction(a,n,o)?t.send(c(1)):t.send(c(null,"Cannot confirm.")):t.send(c(null,"Game not started.")):t.send(c(null,G(o)))}),io:t=>{const s=(e=>[e,"",""])(t);e[t.id]=s,t.on("disconnect",A(()=>{(t=>{const[s,a]=t;a&&a.leave(t),delete e[s]})(s)}));const a=i();t.emit(G_S_CONNECTED,l({games:p(),maps:C,id:t.id,key:a}))}};module.exports=u;const y=60/G_SCALE,h=12*G_AU,g=e=>({color:"aquamarine",mass:5*10**30,r:y,hp:5,...e}),x=(e,t,s)=>({x:e,y:t,r:s}),f=(e,t,s,a)=>({type:a,value:250,r:G_AU/3.2,x:e,y:t,posR:s}),R=(e,t,s)=>{const a=f(e,t,s,G_res_coin);return a.value=250,a},S=(e,t,s)=>[e(t,s,0),e(-t,s,1),e(t,-s,2),e(-t,-s,3)],L=(e,t,s)=>[e(0,s,0),e(0,-s,1),e(t,0,2),e(-t,0,3)],C=[{name:"Deep Space",maxRoundLength:8e3,maxPlayers:4,width:h,height:h,playerLocations:[...L((e,t)=>x(e,t,G_AU),h/3,h/3)],resourceLocations:[...S((e,t)=>R(e,t,G_AU),h/1.8,h/1.8),...L((e,t,s)=>f(e,t,G_AU,s<2?G_res_spray:G_res_planetCracker),h/1.5,h/1.5),...S((e,t)=>R(e,t,G_AU/4),h/1.2,h/1.2)],planetLocations:[g({x:0,y:0,posR:0}),...S((e,t)=>g({x:e,y:t,posR:G_AU}),h/3,h/3)]},{name:"Solar Winds",maxRoundLength:8e3,maxPlayers:4,width:h,height:h,playerLocations:[x(10*-G_AU,10*-G_AU,G_AU),x(10*G_AU,10*-G_AU,G_AU),x(4*-G_AU,4*-G_AU,G_AU),x(4*G_AU,4*G_AU,G_AU)],resourceLocations:[f(0,10*G_AU,0,G_res_planetCracker),f(0,8.5*G_AU,0,G_res_planetCracker),f(0,7*G_AU,0,G_res_planetCracker),f(6.5*-G_AU,0,G_AU/4,G_res_spray),f(6.5*-G_AU,1.5*G_AU,G_AU/4,G_res_spray),f(6.5*G_AU,0,G_AU/4,G_res_spray),f(6.5*G_AU,1.5*G_AU,G_AU/4,G_res_spray),R(10*-G_AU,5*-G_AU,G_AU/2),R(10*G_AU,5*-G_AU,G_AU/2),R(4*-G_AU,5*-G_AU,G_AU/2),R(4*-G_AU,3*-G_AU,G_AU/2),R(4*G_AU,5*-G_AU,G_AU/2),R(4*G_AU,3*-G_AU,G_AU/2),R(10*-G_AU,10*G_AU,0),R(10*-G_AU,8.5*G_AU,G_AU/2),R(10*-G_AU,7*G_AU,G_AU/2),R(10*G_AU,10*G_AU,0),R(10*G_AU,8.5*G_AU,G_AU/2),R(10*G_AU,7*G_AU,G_AU/2)],planetLocations:[g({x:0,y:4*G_AU,posR:G_AU/2,mass:1*10**30}),g({x:0,y:2*G_AU,posR:G_AU/2,mass:1*10**30}),g({x:0,y:0*G_AU,posR:G_AU/2,mass:1*10**30}),g({x:0,y:-1*G_AU*2,posR:G_AU/2,mass:1*10**30}),g({x:0,y:-2*G_AU*2,posR:G_AU/2,mass:1*10**30}),g({x:0,y:-3*G_AU*2,posR:G_AU/2,mass:1*10**30}),g({x:0,y:-4*G_AU*2,posR:G_AU/2,mass:1*10**30}),g({x:0,y:-5*G_AU*2,posR:G_AU/2,mass:1*10**30}),g({x:0,y:-6*G_AU*2,posR:G_AU/2,mass:1*10**30}),g({x:6.5*-G_AU,y:12*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*-G_AU,y:10*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*-G_AU,y:8*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*-G_AU,y:6*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*-G_AU,y:4*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*G_AU,y:12*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*G_AU,y:10*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*G_AU,y:8*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*G_AU,y:6*-G_AU,posR:G_AU/2,mass:1*10**30}),g({x:6.5*G_AU,y:4*-G_AU,posR:G_AU/2,mass:1*10**30})]},{name:"Planetary Fortress",maxRoundLength:8e3,maxPlayers:4,width:h,height:h,playerLocations:[...S((e,t)=>x(e,t,G_AU),h/2,h/2)],resourceLocations:[R(0,0,0),...S((e,t)=>f(e,t,G_AU/4,G_res_planetCracker),G_AU,G_AU),...S((e,t)=>R(e,t,G_AU/2),h/1.1,h/1.1),...L((e,t)=>R(e,t,0),h-G_AU/2,h-G_AU/2),...S((e,t)=>f(e,t,G_AU/4,G_res_spray),5*G_AU,10*G_AU),...S((e,t)=>R(e,t,G_AU/2),10*G_AU,5*G_AU)],planetLocations:[...S((e,t)=>g({x:e,y:t,posR:G_AU/2}),h-9*G_AU,h-9*G_AU),...L((e,t)=>g({x:e,y:t,posR:G_AU/2}),h-3*G_AU,h-3*G_AU),...L((e,t)=>g({x:e,y:t,posR:G_AU/2}),h-6*G_AU,h-6*G_AU),...L((e,t)=>g({x:e,y:t,posR:G_AU/2}),h-9*G_AU,h-9*G_AU)]},{name:"Firing Range",maxRoundLength:8e3,maxPlayers:4,width:h,height:h,playerLocations:[x(-8*G_AU,-h+G_AU,0),x(-4*G_AU,-h+G_AU,0),x(4*G_AU,-h+G_AU,0),x(8*G_AU,-h+G_AU,0)],resourceLocations:[...S((e,t)=>R(e,t,G_AU),h/1.8,h/1.8),...L((e,t,s)=>f(e,t,G_AU,s<2?G_res_spray:G_res_planetCracker),h/1.5,h/1.5),...S((e,t)=>R(e,t,G_AU/4),h/1.2,h/1.2)],planetLocations:[]}],E=(e,a)=>{let r,n,_,G,c=[e],A=0,U=0,p=0,m=null,u=1,y=0,h=25/G_SCALE,g=100,x=0;const f=["blue","red","green","yellow"],R=()=>{try{let e=+new Date;n=e-r,r=e;let t=m,{projectiles:s,planets:a,players:o,resources:_}=t,G=G_applyGravity(s,s.concat(a),o.filter(e=>!e.dead).concat(_),n);m.collisions=G;let c=G.length;if(c)for(let e=0;e<c;e++)S(G[e])&&(G.splice(e,1),e--,c--);for(let e=0;e<s.length;e++){const t=s[e];t.meta.type===G_action_move&&I(t.meta.player,t.px,t.py),t.meta.remove?(s.splice(e,1),e--):(r-A>=t.t||L(t.px,t.py))&&(G.push([t,null]),s.splice(e,1),e--)}for(let e=0;e<a.length;e++)a[e].meta.remove&&(a.splice(e,1),e--);if(0===s.length)return void T();y++,(y>=10||G.length)&&(y=0,((e,t,s)=>{M.emitAll(G_S_BROADCAST,l({i:e,timestamp:t,gameData:s}))})(u++,r,m))}catch(e){T()}},S=e=>{const[t,s]=e;let a=v(t.meta.player,m);switch(1){case!(!s.color||!s.name):a=v(s.id,m),a.dead=1,t.meta.remove=1;break;case(e=>e.meta&&e.meta.proj)(s):if(s.meta.player===t.meta.player)return 1;const e=t.meta.speed*t.meta.mass,r=s.meta.speed*s.meta.mass;e>=r&&(s.meta.remove=1),r>=e&&(t.meta.remove=1);break;case(e=>e.type===G_res_coin)(s):a.funds+=s.value,P(s.id,m);break;case(e=>e.type===G_res_spray)(s):a.actions[G_action_spread]+=2,P(s.id,m);break;case(e=>e.type===G_res_planetCracker)(s):a.actions[G_action_planetCracker]+=2,P(s.id,m);break;case(e=>!!e.color)(s):t.meta.remove=1;const n=t.meta.type;n===G_action_move?a.dead=1:n===G_action_planetCracker&&(s.meta.remove=1)}},L=(e,t)=>{const s=m.width+G_AU/2,a=m.height+G_AU/2;return e<-s||e>s||t>a||t<-a},E=()=>{A=r=+new Date,n=0,M.emitAll(G_S_START_SIMULATION,l(m)),G=setTimeout(T,m.maxRoundLength),_=setInterval(R,G_FRAME_MS)},T=()=>{if(U){M.emitAll(G_S_STOP_SIMULATION,l(m)),clearInterval(_),_=-1,clearTimeout(G),G=-1,m.projectiles=[],m.collisions=[];const e=N();e?(M.finished=1,M.finish(e)):m.players.forEach(e=>{e.ready=0,e.funds+=25})}},v=(e,s)=>{const a="string"==typeof e?e:t(e);return s.players.reduce((e,t)=>t.id===a?t:e,null)},P=(e,t)=>{const s=((e,t)=>t.resources.reduce((t,s,a)=>s.id===e?a:t,-1))(e,t);s>-1&&t.resources.splice(s,1)},I=(e,t,s)=>{const a=v(e,m);k(t,s)&&(a.x=t,a.y=s)},k=(e,t)=>{const{width:s,height:a}=m;return e>=-s&&e<=s&&t>=-a&&t<=a},D=()=>m.players.reduce((e,t)=>e&&(t.dead?1:t.ready),1),N=()=>{if(p)return 0;let e=[];for(let t=0;t<m.players.length;t++){const s=m.players[t];s.dead||e.push(s)}return 0===e.length?"draw":1===e.length?e[0].id:0},w=()=>{const e=M.getPlayers();M.emitAll(G_S_LOBBY_LIST_UPDATED,l(e))},M={id:t(e),name:a,getPlayers:()=>c.map(e=>({id:t(e),userName:s(e)})),join:e=>U||p?0:c.length<C[x].maxPlayers?(c.push(e),w(),1):0,leave(e){for(let t=0;t<c.length;t++){const s=c[t];if(s===e){if(c.splice(t,1),o(s),U){const e=v(s,m);return 0===c.length?M.stop():e.dead||(e.dead=1),N()?M.stop():D()&&setTimeout(()=>{try{E()}catch(e){}},500),1}return 0===t?M.stop():w(),1}}return 0},start(){U=1,m=(e=>{let a=(e=>{let t=e.length;e=[...e];const s=[];for(let a=0;a<t;a++){const t=Math.floor(Math.random()*e.length);s.push(e[t]),e.splice(t,1)}return s})(e);const r=C[x],{resourceLocations:n,planetLocations:o,playerLocations:_}=r,G={...r,players:[],planets:[],resources:[],projectiles:[],collisions:[],result:0,baseFundsPerRound:25};for(let e=0;e<a.length;e++){const r=a[e],{x:n,y:o,r:l}=_[e],c=G_getRandomLocInCircle(n,o,l);G.players.push({id:t(r),name:s(r),funds:g,actions:{[G_action_shoot]:99,[G_action_move]:99,[G_action_spread]:0,[G_action_planetCracker]:0},ready:0,dead:0,hp:1,color:f[e],r:h,...c,target:[c.x,c.y]})}for(let e=0;e<o.length;e++){const t=o[e],{x:s,y:a,mass:r,color:n,r:_,posR:l}=t,c=G_getRandomLocInCircle(s,a,l);G.planets.push(G_Body({color:n,type:"planet"},r,n,_,0,0,c.x,c.y))}for(let e=0;e<n.length;e++){const t=n[e],{x:s,y:a,posR:r}=t;G.resources.push({...t,id:i(),...G_getRandomLocInCircle(s,a,r)})}return G})(c),M.emitAll(G_S_START,l({startTime:A,gameData:m}))},stop(){T(),M.emitAll(G_S_STOP,l("The game was stopped.")),c.forEach(e=>{o(e)}),d()},finish(e){m.result=e,M.emitAll(G_S_FINISHED,l(m)),c.forEach(e=>{o(e)}),d()},setMapIndex(e){e>=0&&e<C.length&&(x=e),-1===e&&(x=0,p=1,g=1e5)},confirmAction(e,t,s){const a=v(s,m);if(!a||a.dead)return 0;const[r,n,o]=t.split(","),_=(([e,t])=>{const s=Math.sqrt(e*e+t*t);return[e/s,t/s]})([r-a.x,n-a.y]),G=((e,t,s,a)=>{const r=(e,t)=>{const{round:s,cos:a,sin:r,PI:n}=Math,o=a(t*=n/180),_=r(t);return[s(1e4*(e[0]*o-e[1]*_))/1e4,s(1e4*(e[0]*_+e[1]*o))/1e4]},n=(s,r)=>G_Body({proj:1,type:e,id:i(),player:a.id,speed:t,color:a.color},_,U,G,s*t,r*t,p,d,l),o=[];let _=1,G=5/G_SCALE,l=m.maxRoundLength,c=s[0],A=s[1];const{color:U,x:p,y:d}=a;switch(e){case G_action_spread:for(let e=-5;e<=5;e+=5){let[t,a]=r(s,e);o.push(n(t,a))}break;case G_action_planetCracker:G=20/G_SCALE,_=10,o.push(n(c,A));break;case G_action_move:l=1e3,G=15/G_SCALE;default:o.push(n(c,A))}return o})(e,G_SPEEDS[o]&&G_SPEEDS[o][0]||G_SPEEDS.normal[0],_,a),l=((e,t,s)=>{const a=G_getActionCost(e)+G_getSpeedCost(t);return v(s,m).funds>a?a:0})(e,o,s);return 0==l?0:(m.projectiles=m.projectiles.concat(G),a.target=[r,n],a.funds-=l,a.cost=l,a.actions[e]-=a.actions[e]<99?1:0,a.action=e,a.ready=1,D()&&setTimeout(()=>{try{E()}catch(e){}},500),1)},canStart:()=>p?1:c.length>1&&c.length<=C[x].maxPlayers&&!U,isPractice:()=>p,isStarted:()=>U,emitAll(e,t){c.forEach(s=>{s[0].emit(e,t)})}};return M}})();