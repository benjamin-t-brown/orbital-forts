const G_R_CREATE="create",G_R_JOIN="join",G_R_LEAVE="leave",G_R_START="start",G_R_UPDATE_LOBBY="update-lobby",G_R_CONFIRM_ACTION="confirm",G_S_CONNECTED="s-connected",G_S_LIST_UPDATED="s-game-list",G_S_CREATE="s-create",G_S_START="s-start",G_S_LOBBY_DATA="s-lobby-data",G_S_LEAVE="s-leave",G_S_JOIN="s-join",G_S_STOP="s-stop",G_S_BROADCAST="s-broadcast",G_S_START_SIMULATION="s-simulate-start",G_S_STOP_SIMULATION="s-simulate-stop",G_S_FINISHED="s-finished",G_G=667428e-16,G_AU=1496e8,G_SCALE=75/G_AU,G_FRAME_MS=13.3333;let G_SPEEDS={Normal:[55e3,0],Super:[125e3,75]};const G_action_move="Move",G_action_shoot="Shoot",G_action_spread="Spreadfire",G_action_planetCracker="Planet Crkr",G_res_coin="coin",G_res_spray="spray",G_res_planetCracker="crack";let G_actions=[["Move",50],["Shoot",0],["Spreadfire",100],["Planet Crkr",200]];const G_randomId=()=>(+new Date*Math.random()).toString(16);let G_getActionCost=e=>G_actions.reduce((t,[o,a])=>o===e?a:t,0),G_getSpeedCost=e=>G_SPEEDS[e][1];const G_getRandomLocInCircle=(e,t,o)=>{let a=2*Math.PI*Math.random(),r=Math.sqrt(Math.random())*o;return{x:e+r*Math.cos(a),y:t+r*Math.sin(a)}},G_getNormalizedVec=([e,t])=>{const o=Math.sqrt(e*e+t*t);return[e/o,t/o]},getPlayerByPlayerId=(e,t)=>{const o=e;return t.players.reduce((e,t)=>t.id===o?t:e,null)},G_Body=(e,t,o,a,r,s,l,n,c)=>({meta:e,mass:t,color:o,r:a,vx:r,vy:s,px:l,py:n,t:c}),G_createEntities=(e,t,{createPlanets:o=!0}={})=>{const{planetLocations:a,resourceLocations:r}=t;if(o)for(let t=0;t<a.length;t++){const o=a[t],{x:r,y:s,mass:l,color:n,r:c,posR:i}=o,_=G_getRandomLocInCircle(r,s,i);e.planets.push(G_Body({color:n,type:"planet"},l,n,c,0,0,_.x,_.y))}for(let t=0;t<r.length;t++){const o=r[t],{x:a,y:s,posR:l}=o;e.resources.push({...o,id:G_randomId(),...G_getRandomLocInCircle(a,s,l)})}},G_applyGravity=(e,t,o,a)=>{const r=(e,t)=>Math.sqrt(e**2+t**2),s=(e,t,o,a)=>r(e,t)<=o+a,l=(e,t)=>{let{px:o,py:a,mass:l,r:n}=e,{px:c,py:i,mass:_,r:p}=t,d=c-o,y=i-a,m=Math.max(r(d,y),.001),G=s(d,y,n,p),h=G_G*l*_/m**2,S=Math.atan2(y,d);return{fx:Math.cos(S)*h,fy:Math.sin(S)*h,c:G}};let n=[],c=172800*a/13.3333;for(let a=0;a<e.length;a++){let r=e[a],i=0,_=0;for(let e=0;e<t.length;e++){let o=t[e];if(r===o)continue;let{fx:a,fy:s,c:c}=l(r,o);c?n.push([r,o]):(i+=a,_+=s)}for(let e=0;e<o.length;e++){let t=o[e],{x:a,y:l,r:c}=t;s(a-r.px,l-r.py,c,r.r)&&r.meta.player!==t.id&&n.push([r,t])}r.vx+=i/r.mass*c,r.vy+=_/r.mass*c,r.px+=r.vx*c,r.py+=r.vy*c}return n},G_createProjectiles=({type:e,speed:t,normalizedVec:o,player:a},r)=>{const s=(e,t)=>{const{round:o,cos:a,sin:r,PI:s}=Math,l=a(t*=s/180),n=r(t);return[o(1e4*(e[0]*l-e[1]*n))/1e4,o(1e4*(e[0]*n+e[1]*l))/1e4]},l=(o,r)=>G_Body({proj:!0,type:e,id:G_randomId(),player:a.id,speed:t,color:a.color},c,y,i,o*t,r*t,m,G,_),n=[];let c=1,i=5/G_SCALE,_=r.maxRoundLength,p=o[0],d=o[1];const{color:y,x:m,y:G}=a;switch(e){case"Spreadfire":for(let e=-5;e<=5;e+=5){let[t,a]=s(o,e);n.push(l(t,a))}break;case"Planet Crkr":i=20/G_SCALE,c=10,n.push(l(p,d));break;case"Move":_=1e3,i=15/G_SCALE;default:n.push(l(p,d))}return n},G_handleCollision=(e,t)=>{const o=(e,t)=>{const o=((e,t)=>t.resources.reduce((t,o,a)=>o.id===e?a:t,-1))(e,t);o>-1&&t.resources.splice(o,1)},[a,r]=e;let s=getPlayerByPlayerId(a.meta.player,t);switch(!0){case!(!r.color||!r.name):console.log("COL with player",a,r),s=getPlayerByPlayerId(r.id,t),s.dead=!0,a.meta.remove=!0;break;case(e=>e.meta&&e.meta.proj)(r):if(r.meta.player===a.meta.player)return!0;console.log("COL with other projectile",a,r);const e=a.meta.speed*a.meta.mass,l=r.meta.speed*r.meta.mass;e>=l&&(console.log("This proj is faster or same as other, remove other"),r.meta.remove=!0),l>=e&&(console.log("This proj is slower or same as other, remove this"),a.meta.remove=!0);break;case(e=>"coin"===e.type)(r):console.log("COL with coin",a,r),s.funds+=r.value,o(r.id,t);break;case(e=>"spray"===e.type)(r):console.log("COL with spray",a,r),s.actions.Spreadfire+=2,o(r.id,t);break;case(e=>"crack"===e.type)(r):console.log("COL with planet cracker",a,r),s.actions["Planet Crkr"]+=2,o(r.id,t);break;case(e=>!!e.color)(r):console.log("COL with planet",a,r),a.meta.remove=!0;const n=a.meta.type;"Move"===n?(console.log("Player died by running into planet"),s.dead=!0):"Planet Crkr"===n&&(console.log("Player removed a planet with a planet cracker!"),r.meta.remove=!0)}},G_simulate=(e,{now:t,nowDt:o,startTime:a})=>{const r=(t,o,a)=>{const r=getPlayerByPlayerId(t,e);s(o,a)&&(r.x=o,r.y=a)},s=(t,o)=>{const{width:a,height:r}=e;return t>=-a&&t<=a&&o>=-r&&o<=r};let l=e,{projectiles:n,planets:c,players:i,resources:_}=l,p=G_applyGravity(n,n.concat(c),i.filter(e=>!e.dead).concat(_),o);e.collisions=p;let d=p.length;if(d){console.log("GOT A COLLISION",p);for(let t=0;t<d;t++)G_handleCollision(p[t],e)&&(console.log("remove collision"),p.splice(t,1),t--,d--)}for(let e=0;e<n.length;e++){const o=n[e];"Move"===o.meta.type&&r(o.meta.player,o.px,o.py),o.meta.remove?(n.splice(e,1),e--):(t-a>=o.t||!s(o.px,o.py))&&(p.push([o,null]),n.splice(e,1),e--)}for(let e=0;e<c.length;e++)c[e].meta.remove&&(c.splice(e,1),e--)};