const G_R_CREATE="create",G_R_JOIN="join",G_R_LEAVE="leave",G_R_START="start",G_R_UPDATE_LOBBY="update-lobby",G_R_CONFIRM_ACTION="confirm",G_R_GET_REPLAYS_LIST="replays",G_R_GET_REPLAY="replay",G_S_CONNECTED="s-connected",G_S_LIST_UPDATED="s-game-list",G_S_CREATE="s-create",G_S_START="s-start",G_S_LOBBY_DATA="s-lobby-data",G_S_GAME_METADATA="s-game-meta",G_S_LEAVE="s-leave",G_S_JOIN="s-join",G_S_STOP="s-stop",G_S_BROADCAST="s-broadcast",G_S_START_SIMULATION="s-simulate-start",G_S_STOP_SIMULATION="s-simulate-stop",G_S_FINISHED="s-finished",G_GAME_TIME_BUFFER_MS=250;let G_DEBUG=!1;const G_G=667428e-16,G_AU=1496e8,G_SCALE=75/G_AU,G_FRAME_MS=13.333,G_MASS_MIN=5*10**30,G_MASS_MAX=100*10**30;let G_SPEEDS={Normal:[55e3,0],Super:[125e3,50]};const G_action_move="Move",G_action_shoot="Shoot",G_action_spread="Spread Fire",G_action_planetCracker="Planet Crkr.",G_action_cluster="Cluster Bomb",G_action_clusterSpawn="Cluster Spawn",G_action_boomerang="Boomerang",G_res_coin="coin",G_res_spray="spread",G_res_planetCracker="planet-cracker",G_res_cluster="cluster",G_res_wormhole="wormhole",G_res_boomerang="boomerang",G_res_sprites={coin:{elem:"div",label:"",offsetTop:25,content:"$"},spread:{elem:"div",label:"Spread Fire",offsetTop:45,content:"!"},"planet-cracker":{elem:"div",label:"Planet Crkr.",offsetTop:45,content:"!"},cluster:{elem:"div",label:"Cluster Bomb",offsetTop:45,content:"!"},wormhole:{elem:"div",label:"",offsetTop:32,content:"<div></div>"},boomerang:{elem:"div",label:"Boomerang",offsetTop:45,content:"!"}};let G_actions=[["Move",50],["Shoot",0],["Spread Fire",100],["Planet Crkr.",150],["Cluster Bomb",200],["Boomerang",25]];const G_entity={nothing:"ent_nothing",player:"ent_player",planet:"ent_planet",projectile:"ent_projectile",coin:"ent_res_coin",planetCracker:"ent_res_planet_cracker",spray:"ent_res_spread",cluster:"ent_res_cluster",wormhole:"ent_res_wormhole",boomerang:"ent_res_boomerang"},G_randomId=()=>(+new Date*Math.random()).toString(16),G_normalize=(e,t,r,o,n)=>o+(e-t)*(n-o)/(r-t),G_dist=(e,t)=>Math.sqrt(e**2+t**2),G_collidesCir=(e,t,r,o)=>G_dist(e,t)<=r+o;let G_getActionCost=e=>G_actions.reduce((t,[r,o])=>r===e?o:t,0),G_getSpeedCost=e=>G_SPEEDS[e][1];const G_getRandomLocInCircle=(e,t,r)=>{let o=2*Math.PI*Math.random(),n=Math.sqrt(Math.random())*r;return{x:e+n*Math.cos(o),y:t+n*Math.sin(o)}},G_getNormalizedVec=([e,t])=>{const r=Math.sqrt(e*e+t*t);return[e/r,t/r]},G_getEntityFromEntMap=(e,t)=>t.entMap[e],G_forEachEntityType=(e,t,r)=>{for(let o in r.entMap){const n=r.entMap[o];G_getEntityType(n)===t&&e(n,o)}},G_Body=(e,t,r,o,n,a,s,l,c)=>({id:G_randomId(),meta:e,mass:t,color:r,r:o,vx:n,vy:a,ax:0,ay:0,px:s,py:l,t:c}),G_body_setAcceleration=(e,t,r)=>{e.ax=t,e.ay=r},G_createEntities=(e,t,{createPlanets:r=!0}={})=>{const o=(t,r)=>{const o=G_getEntityFromEntMap(r,e);let{px:n,py:a,x:s,y:l,r:c}=t,{px:i,py:_,x:p,y:G,r:m}=o;return G_collidesCir((p||i)-(s||n),(G||_)-(l||a),c,m)},n=(e,t)=>{for(let r=0;r<t.length;r++)if(o(e,t[r]))return!0;return!1},{planetLocations:a,resourceLocations:s}=t;if(r)for(let t=0;t<a.length;t++){const r=a[t],{x:o,y:s,mass:l,color:c,r:i,posR:_}=r;let p,G=0;do{const e=G_getRandomLocInCircle(o,s,_);p=G_Body({color:c,type:"planet"},l,c,i,0,0,e.x,e.y),G++}while(G<=10&&n(p,e.planets));if(G<=10){const t=p.id;e.planets.push(t),e.entMap[t]=p}}for(let t=0;t<s.length;t++){const r=s[t],{x:o,y:a,posR:l}=r;let c,i=0;do{c={...r,...G_getRandomLocInCircle(o,a,l)},i++}while(i<=10&&n(c,e.planets.concat(e.resources)));if(i<=10){const t=G_randomId();c.id=t,e.resources.push(t),e.entMap[t]=c}}},G_getCorrespondingWormhole=(e,t)=>{const r=t.resources.map(e=>G_getEntityFromEntMap(e,t)).filter(e=>"wormhole"===e.type),o=r.indexOf(e);return o%2==0?r[o+1]:r[o-1]},G_applyAction=(e,t,r)=>{const{action:o,speed:n,target:[a,s],auxArgs:l,vec:c,cost:i}=r;G_createProjectiles({type:o,speed:n,normalizedVec:c,player:t,...l},e).forEach(t=>{e.projectiles.push(t.id),e.entMap[t.id]=t}),t.target=[a,s],t.funds-=i,t.cost=i,t.actions[o]-=t.actions[o]<99?1:0,t.action=o},G_createProjectiles=({type:e,speed:t,normalizedVec:r,player:o,pos:n,lifetimeMultiplier:a,accelerationAngle:s},l)=>{const c=(e,t)=>{const{round:r,cos:o,sin:n,PI:a}=Math,s=o(t*=a/180),l=n(t);return[r(1e4*(e[0]*s-e[1]*l))/1e4,r(1e4*(e[0]*l+e[1]*s))/1e4]},i=[];let _=1,p=5/G_SCALE,G=l.maxRoundLength,m=r[0],y=r[1],{color:d,x:u,y:h}=o;n&&(u=n.x,h=n.y);const E=(r,n)=>G_Body({proj:!0,type:e,player:o.id,speed:t,color:o.color},_,d,p,r*t,n*t,u,h,G);switch(e){case"Spread Fire":for(let e=-5;e<=5;e+=5){let[t,o]=c(r,e);i.push(E(t,o))}break;case"Planet Crkr.":p=20/G_SCALE,_=10,i.push(E(m,y));break;case"Cluster Bomb":G=2e3*a,p=10/G_SCALE,i.push(E(m,y));break;case"Cluster Spawn":p=4/G_SCALE,G=4500;for(let e=0;e<360;e+=20){let[t,o]=c(r,e);i.push(E(t,o)),G+=75}break;case"Boomerang":s=parseFloat(s)*Math.PI/180;const e=E(m,y),t=Math.round(550*Math.cos(s));G_body_setAcceleration(e,Math.round(550*Math.sin(s)),t),i.push(e);break;case"Move":G=1e3,p=15/G_SCALE;default:i.push(E(m,y))}return i},G_applyGravity=(e,t,r,o)=>{const n=(e,t)=>{let{px:r,py:o,mass:n,r:a}=e,{px:s,py:l,mass:c,r:i}=t,_=s-r,p=l-o,G=Math.max(G_dist(_,p),.001),m=G_collidesCir(_,p,a,i),y=G_G*n*c/G**2,d=Math.atan2(p,_);return{fx:Math.cos(d)*y,fy:Math.sin(d)*y,c:m}};let a=[],s=172800*o/13.333;for(let l=0;l<e.length;l++){let c=e[l],i=0,_=0;for(let e=0;e<t.length;e++){let r=t[e];if(c===r)continue;let{fx:o,fy:s,c:l}=n(c,r);if(l&&r.meta.color!==c.meta.color){const e=G_createCollision(c,r);a.push(e)}else i+=o,_+=s}for(let e=0;e<r.length;e++){let t=r[e],{x:o,y:n,r:s}=t;if(G_collidesCir(o-c.px,n-c.py,s,c.r)&&c.meta.player!==t.id){const e=G_createCollision(c,t);a.push(e)}}c.vx+=i/c.mass*s+c.ax*o/13.333,c.vy+=_/c.mass*s+c.ay*o/13.333,c.px+=c.vx*s,c.py+=c.vy*s}return a},G_simulate=(e,{now:t,nowDt:r,startTime:o})=>{const n=(e,t,r,o,n)=>{const{width:a,height:s}=n;return e-r>=-a&&e+r<=a&&t-o>=-s&&t+o<=s},a=(e,t,r,o)=>{const a=G_getEntityFromEntMap(e,o);n(t,r,a.r,a.r,o)&&(a.x=t,a.y=r)};let s=e,{projectiles:l,planets:c,players:i,resources:_}=s,p=[];const G=l.map(e=>G_getEntityFromEntMap(e,s)),m=G.concat(c.map(e=>G_getEntityFromEntMap(e,s))),y=i.map(e=>G_getEntityFromEntMap(e,s)).concat(_.map(e=>G_getEntityFromEntMap(e,s)));let d=G_applyGravity(G,m,y,r);e.collisions=e.collisions.concat(d);for(let t=0;t<d.length;t++){const r=d[t];if(r[2])continue;r[2]=!0;const{remove:o,cb:n}=G_handleCollision(r,e);o&&(d.splice(t,1),t--),n&&p.push(n)}for(let r=0;r<l.length;r++){const c=G_getEntityFromEntMap(l[r],s);if("Move"===c.meta.type&&(G_getEntityFromEntMap(c.meta.player,s).dead?c.meta.remove=!0:a(c.meta.player,c.px,c.py,s)),c.meta.remove)l.splice(r,1),delete e.entMap[c.id],r--;else if(t-o>=c.t||!n(c.px,c.py,c.r,c.r,s)){const e=G_createCollision(c,null),{remove:t,cb:o}=G_handleCollision(e,s);"Move"===c.meta.type||t||(e[2]=!0,s.collisions.push(e)),o&&p.push(o),l.splice(r,1),r--}}for(let e=0;e<c.length;e++)G_getEntityFromEntMap(c[e],s).meta.remove&&(c.splice(e,1),e--);for(let e=0;e<p.length;e++)p[e]()},G_getEntityType=e=>{switch(!0){case!e:return"ent_nothing";case!(!e.color||!e.name):return"ent_player";case(e=>e.meta&&e.meta.proj)(e):return"ent_projectile";case(e=>"coin"===e.type)(e):return G_entity.coin;case(e=>"spread"===e.type)(e):return G_entity.spray;case(e=>"planet-cracker"===e.type)(e):return G_entity.planetCracker;case(e=>!!e.color)(e):return"ent_planet";case(e=>"cluster"===e.type)(e):return G_entity.cluster;case(e=>"wormhole"===e.type)(e):return G_entity.wormhole;case(e=>"boomerang"===e.type)(e):return G_entity.boomerang;default:return"ent_nothing"}},G_createCollision=(e,t)=>[e.id,t&&t.id||0,!1,G_randomId()],G_handleCollision=(e,t)=>{const r=(e,t)=>{const r=t.resources.indexOf(e);r>-1&&t.resources.splice(r,1)},o=(e,t,r)=>()=>{G_createProjectiles({type:"Cluster Spawn",speed:G_SPEEDS.Normal[0],normalizedVec:[0,1],player:t,pos:{x:e.px,y:e.py}},r).forEach(e=>{r.projectiles.push(e.id),r.entMap[e.id]=e})},[n,a]=e,s=G_getEntityFromEntMap(n,t);if(!s)return;const l=G_getEntityFromEntMap(a,t);if(!s)return;let c=G_getEntityFromEntMap(s.meta.player,t),i=s.meta.type;switch(G_getEntityType(l)){case"ent_player":if(G_getEntityFromEntMap(l.id,t).dead=!0,s.meta.remove=!0,"Cluster Bomb"===i)return{cb:o(s,c,t)};break;case"ent_projectile":if(l.meta.player===s.meta.player)return{remove:!0};const e=s.meta.speed*s.mass,n=l.meta.speed*l.mass;if(e>=n&&(l.meta.remove=!0),n>=e&&(s.meta.remove=!0),"Cluster Bomb"===i)return{cb:o(s,c,t)};break;case G_entity.coin:c.funds+=l.value,r(l.id,t);break;case G_entity.spray:c.actions["Spread Fire"]+=2,r(l.id,t);break;case G_entity.planetCracker:c.actions["Planet Crkr."]+=2,r(l.id,t);break;case G_entity.cluster:c.actions["Cluster Bomb"]+=2,r(l.id,t);break;case G_entity.boomerang:c.actions.Boomerang+=2,r(l.id,t);break;case"ent_planet":if(s.meta.remove=!0,"Move"===i)c.dead=!0;else if("Planet Crkr."===i)l.meta.remove=!0;else if("Cluster Bomb"===i)return{cb:o(s,c,t)};break;case G_entity.wormhole:const{px:a,py:_,r:p}=s,{x:G,y:m,r:y}=l,d=G-a,u=m-_,[h,E]=G_getNormalizedVec([d,u]),g=G_getCorrespondingWormhole(l,t),M=h*(y+p+1)+g.x,f=E*(y+p+1)+g.y;s.meta.prevX=s.px,s.meta.prevY=s.py,s.px=M,s.py=f;break;case"ent_nothing":if("Cluster Bomb"===i)return{cb:o(s,c,t)}}return{}};