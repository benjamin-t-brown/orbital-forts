const G_REST_CREATE_GAME="create",G_REST_JOIN_GAME="join",G_REST_LEAVE_GAME="leave",G_REST_START_GAME="start",G_REST_SET_MAP_INDEX="map",G_REST_GAME_CONFIRM_ACTION="confirm",G_SOCKET_CONNECTED="s-connected",G_SOCKET_GAME_LIST_UPDATED="s-game-list",G_SOCKET_CREATE_GAME="s-create",G_SOCKET_START_GAME="s-start",G_SOCKET_LOBBY_LIST_UPDATED="s-lobby-list",G_SOCKET_LEAVE_GAME="s-leave",G_SOCKET_JOIN_GAME="s-join",G_SOCKET_STOP_GAME="s-stop",G_SOCKET_BROADCAST_GAME="s-broadcast",G_SOCKET_START_SIMULATION="s-simulate-start",G_SOCKET_STOP_SIMULATION="s-simulate-stop",G_SOCKET_GAME_FINISHED="s-finished",G_G=667428e-16,G_AU=1496e8,G_SCALE=75/G_AU,G_FRAME_MS=13.3333;let G_SPEEDS={Normal:[55e3,0],Super:[125e3,100]},G_actions=[["Shoot",0],["Move",50]],G_getActionCost=_=>G_actions.reduce((t,[E,e])=>E===_?e:t,0),G_getSpeedCost=_=>G_SPEEDS[_][1];const G_getRandomLocInCircle=(_,t,E)=>{let e=2*Math.PI*Math.random(),G=Math.sqrt(Math.random())*E;return{x:_+G*Math.cos(e),y:t+G*Math.sin(e)}},G_Body=(_,t,E,e,G,s,a,S,T)=>({meta:_,mass:t,color:E,r:e,vx:G,vy:s,px:a,py:S,t:T}),G_applyGravity=(_,t,E,e)=>{const G=(_,t)=>Math.sqrt(_**2+t**2),s=(_,t,E,e)=>G(_,t)<=E+e,a=(_,t)=>{let{px:E,py:e,mass:a,r:S}=_,{px:T,py:o,mass:A,r:r}=t,M=T-E,n=o-e,l=Math.max(G(M,n),.001),C=s(M,n,S,r),O=G_G*a*A/l**2,c=Math.atan2(n,M);return{fx:Math.cos(c)*O,fy:Math.sin(c)*O,c:C}};let S=[],T=172800*e/13.3333;for(let e=0;e<_.length;e++){let G=_[e],o=0,A=0;for(let _=0;_<t.length;_++){let E=t[_];if(G===E)continue;let{fx:e,fy:s,c:T}=a(G,E);T?S.push([G,E]):(o+=e,A+=s)}for(let _=0;_<E.length;_++){let t=E[_],{x:e,y:a,r:T}=t;s(e-G.px,a-G.py,T,G.r)&&G.meta.player!==t.id&&S.push([G,t])}G.vx+=o/G.mass*T,G.vy+=A/G.mass*T,G.px+=G.vx*T,G.py+=G.vy*T}return S};